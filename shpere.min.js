/***************************
File generated by shrinker.ch
DateTime: 2012-09-05, 07:04:45
File list:
	* shpere.js
*****************************/
function init(){cvs=document.getElementById("canvas13k");ctx=cvs.getContext("2d");cvs.addEventListener("mousedown",onMouseDown,false);cvs.addEventListener("mousemove",onMouseMove,false);cvs.addEventListener("mouseup",onMouseUp,false);cvs.addEventListener("mouseout",onMouseUp,false);isMouseDown=false;mouseSensitivity=100;currentMouseCoords={x:0,y:0};r=200;delta={theta:0,phi:0};sphere_tau=0;tm={current:Date.now(),last:null,step:function(){this.last=this.current;this.current=Date.now()},delta:function(){return this.current-
this.last}};sphere=makesphere();paddle=new Paddle("rgb(20,160,80)","rgba(20,160,80,0.4)",sphere[15][15])}function shpereMain(){init();setInterval(loop,33)}function loop(){clear();update();draw()}function clear(){ctx.clearRect(0,0,cvs.width,cvs.height);var a=cvs.width;cvs.width=1;cvs.width=a}function update(){tm.step()}function draw(){ctx.translate(cvs.width/2,cvs.height/2);drawLongitudes();paddle.draw()}
function drawLongitudes(){ctx.lineWidth=2.5;for(var a=0;a<sphere.length;a++){ctx.beginPath();var b=sphereToRect(r,sphere[a][0].theta+delta.theta,sphere[a][0].phi);b=rotateAboutY(b.x,b.y,b.z,sphere_tau);ctx.moveTo(Math.round(b.x),Math.round(b.y));for(b=1;b<sphere[a].length;b++){var c=sphereToRect(r,sphere[a][b].theta+delta.theta,sphere[a][b].phi);c=rotateAboutY(c.x,c.y,c.z,sphere_tau);ctx.lineTo(Math.round(c.x),Math.round(c.y));if(b==15)ctx.strokeStyle=c.z>0?"rgba(255,255,255,0.8)":"rgba(190,190,190,0.6)"}ctx.stroke()}}
function makesphere(){for(var a=[],b=0;b<30;b++){a.push([]);for(var c=0;c<30;c++)a[b].push({theta:b*12/360*Math.PI*2,phi:c*6/360*Math.PI*2})}console.log(a);return a}function sphereToRect(a,b,c){x=a*Math.sin(c)*Math.cos(b);y=a*Math.sin(c)*Math.sin(b);z=a*Math.cos(c);return{x:y,y:z,z:x}}function rotateAboutY(a,b,c,d){return{x:a,y:b*Math.cos(d)-c*Math.sin(d),z:b*Math.sin(d)+c*Math.cos(d)}}
function Paddle(a,b,c){this.vertex=c;this.frontColor=a;this.rearColor=b;this.deg=0.5084;this.draw=function(){ctx.beginPath();var d=sphereToRect(r,this.vertex.theta+delta.theta,this.vertex.phi);d=rotateAboutY(d.x,d.y,d.z,sphere_tau);var e=sphereToRect(r,this.vertex.theta-this.deg/2+delta.theta,this.vertex.phi-this.deg/2);e=rotateAboutY(e.x,e.y,e.z,sphere_tau);var f=sphereToRect(r,this.vertex.theta+this.deg/2+delta.theta,this.vertex.phi-this.deg/2);f=rotateAboutY(f.x,f.y,f.z,sphere_tau);var g=sphereToRect(r,
this.vertex.theta+this.deg/2+delta.theta,this.vertex.phi+this.deg/2);g=rotateAboutY(g.x,g.y,g.z,sphere_tau);var h=sphereToRect(r,this.vertex.theta-this.deg/2+delta.theta,this.vertex.phi+this.deg/2);h=rotateAboutY(h.x,h.y,h.z,sphere_tau);ctx.moveTo(Math.round(e.x),Math.round(e.y));ctx.lineTo(Math.round(f.x),Math.round(f.y));ctx.lineTo(Math.round(g.x),Math.round(g.y));ctx.lineTo(Math.round(h.x),Math.round(h.y));ctx.fillStyle=d.z>0?this.frontColor:this.rearColor;ctx.fill()}}
function onMouseDown(a){isMouseDown=true;currentMouseCoords=getMouseCoords(a);console.log("x, y = "+currentMouseCoords.x+", "+currentMouseCoords.y)}function onMouseUp(){isMouseDown=false}
function onMouseMove(a){lastMouseCoords=currentMouseCoords;currentMouseCoords=getMouseCoords(a);if(isMouseDown){delta.theta+=(currentMouseCoords.x-lastMouseCoords.x)/mouseSensitivity;sphere_tau+=-(currentMouseCoords.y-lastMouseCoords.y)/mouseSensitivity;if(sphere_tau>Math.PI*9/20)sphere_tau=Math.PI*9/20;else if(sphere_tau<-Math.PI*9/20)sphere_tau=-Math.PI*9/20}}
function getMouseCoords(a){var b=a.x,c=a.y;if(a.x||a.x==0){b=a.x;c=a.y;b-=cvs.offsetLeft;c-=cvs.offsetTop}else if(a.layerX||a.layerX==0){b=a.layerX;c=a.layerY}else if(a.offsetX||a.offsetX==0){b=a.offsetX;c=a.offsetY}else if(a.pageX||a.pageX==0){b=a.pageX;c=a.pageY;if(!a.changedTouches){c-=cvs.offsetTop;b-=cvs.offsetLeft}}else c=b=0;return{x:b,y:c}};

